{"ast":null,"code":"import ProductDataService from '@/services/ProductDataService';\nimport HeroComponent from '@/components/HeroComponent';\nexport default {\n  name: 'App',\n  components: {\n    Hero // Enregistrez le composant Hero pour pouvoir l'utiliser\n  },\n\n  data() {\n    return {\n      produits: [],\n      produitEnCoursDeModification: {\n        id: null,\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      afficherFormulaireAjout: false,\n      afficherFormulaireMiseAJour: false,\n      nouveauProduit: {\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      produitsLocaux: []\n    };\n  },\n  methods: {\n    actualiserListeProduits() {\n      // Utilisez votre méthode getAll pour récupérer la liste des produits\n      ProductDataService.getAll().then(response => {\n        // Mettez à jour la liste des produits avec les données reçues\n        this.produits = response.data;\n      }).catch(error => {\n        console.error('Erreur lors de la récupération de la liste des produits :', error);\n      });\n    },\n    mettreAJourProduit(id, produit) {\n      this.produitEnCoursDeModification = {\n        ...produit\n      };\n      this.afficherFormulaireMiseAJour = true;\n    },\n    supprimerProduit(id) {\n      ProductDataService.delete(id).then(response => {\n        console.log('Produit supprimé avec succès sur le serveur:', response.data);\n\n        // Recherchez l'index de l'élément à supprimer dans le tableau\n        const index = this.produits.findIndex(produit => produit.id === id);\n\n        // Si l'élément a été trouvé, supprimez-le du tableau\n        if (index !== -1) {\n          this.produits.splice(index, 1);\n        }\n\n        // Vous n'avez pas besoin d'appeler actualiserListeProduits ici, car vous avez déjà mis à jour le DOM.\n      }).catch(error => {\n        console.error('Erreur lors de la suppression du produit sur le serveur :', error);\n      });\n    }\n  },\n  mounted() {\n    ProductDataService.getAll().then(response => {\n      this.produits = response.data;\n    });\n  }\n};","map":{"version":3,"names":["ProductDataService","HeroComponent","name","components","Hero","data","produits","produitEnCoursDeModification","id","nom","description","prix","photo","categorie","afficherFormulaireAjout","afficherFormulaireMiseAJour","nouveauProduit","produitsLocaux","methods","actualiserListeProduits","getAll","then","response","catch","error","console","mettreAJourProduit","produit","supprimerProduit","delete","log","index","findIndex","splice","mounted"],"sources":["C:\\Users\\user\\Downloads\\Reprise_2023\\elmaslohi-tp3\\client\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav>\n      <router-link to=\"/\">Home</router-link> |\n      <router-link to=\"/about\">About</router-link> |\n      <router-link to=\"/product\">Produits</router-link>\n    </nav>\n    <HeroComponent />\n    <div class=\"container mt-4\">\n      <router-view\n        :produits=\"produits\"\n        :actualiserListeProduits=\"actualiserListeProduits\"\n        :mettreAJourProduit=\"mettreAJourProduit\"\n        :supprimerProduit=\"supprimerProduit\"\n        :ajouterProduit=\"ajouterProduit\"\n      ></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProductDataService from '@/services/ProductDataService'\nimport HeroComponent from '@/components/HeroComponent'\n\nexport default {\n  name: 'App',\n  components: {\n    Hero // Enregistrez le composant Hero pour pouvoir l'utiliser\n  },\n  data () {\n    return {\n      produits: [],\n      produitEnCoursDeModification: {\n        id: null,\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      afficherFormulaireAjout: false,\n      afficherFormulaireMiseAJour: false,\n      nouveauProduit: {\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      produitsLocaux: []\n    }\n  },\n  methods: {\n    actualiserListeProduits () {\n      // Utilisez votre méthode getAll pour récupérer la liste des produits\n      ProductDataService.getAll()\n        .then(response => {\n          // Mettez à jour la liste des produits avec les données reçues\n          this.produits = response.data\n        })\n        .catch(error => {\n          console.error('Erreur lors de la récupération de la liste des produits :', error)\n        })\n    },\n    mettreAJourProduit (id, produit) {\n      this.produitEnCoursDeModification = { ...produit }\n      this.afficherFormulaireMiseAJour = true\n    },\n\n    supprimerProduit (id) {\n      ProductDataService.delete(id)\n        .then((response) => {\n          console.log('Produit supprimé avec succès sur le serveur:', response.data)\n\n          // Recherchez l'index de l'élément à supprimer dans le tableau\n          const index = this.produits.findIndex(produit => produit.id === id)\n\n          // Si l'élément a été trouvé, supprimez-le du tableau\n          if (index !== -1) {\n            this.produits.splice(index, 1)\n          }\n\n          // Vous n'avez pas besoin d'appeler actualiserListeProduits ici, car vous avez déjà mis à jour le DOM.\n        })\n        .catch((error) => {\n          console.error('Erreur lors de la suppression du produit sur le serveur :', error)\n        })\n    }\n\n  },\n  mounted () {\n    ProductDataService.getAll()\n      .then(response => {\n        this.produits = response.data\n      })\n  }\n\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 50px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n"],"mappings":"AAqBA,OAAOA,kBAAiB,MAAO,+BAA8B;AAC7D,OAAOC,aAAY,MAAO,4BAA2B;AAErD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVC,IAAG,CAAE;EACP,CAAC;;EACDC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,4BAA4B,EAAE;QAC5BC,EAAE,EAAE,IAAI;QACRC,GAAG,EAAE,EAAE;QACPC,WAAW,EAAE,EAAE;QACfC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE;MACb,CAAC;MACDC,uBAAuB,EAAE,KAAK;MAC9BC,2BAA2B,EAAE,KAAK;MAClCC,cAAc,EAAE;QACdP,GAAG,EAAE,EAAE;QACPC,WAAW,EAAE,EAAE;QACfC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE;MACb,CAAC;MACDI,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,uBAAsBA,CAAA,EAAK;MACzB;MACAnB,kBAAkB,CAACoB,MAAM,CAAC,EACvBC,IAAI,CAACC,QAAO,IAAK;QAChB;QACA,IAAI,CAAChB,QAAO,GAAIgB,QAAQ,CAACjB,IAAG;MAC9B,CAAC,EACAkB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,2DAA2D,EAAEA,KAAK;MAClF,CAAC;IACL,CAAC;IACDE,kBAAiBA,CAAGlB,EAAE,EAAEmB,OAAO,EAAE;MAC/B,IAAI,CAACpB,4BAA2B,GAAI;QAAE,GAAGoB;MAAQ;MACjD,IAAI,CAACZ,2BAA0B,GAAI,IAAG;IACxC,CAAC;IAEDa,gBAAeA,CAAGpB,EAAE,EAAE;MACpBR,kBAAkB,CAAC6B,MAAM,CAACrB,EAAE,EACzBa,IAAI,CAAEC,QAAQ,IAAK;QAClBG,OAAO,CAACK,GAAG,CAAC,8CAA8C,EAAER,QAAQ,CAACjB,IAAI;;QAEzE;QACA,MAAM0B,KAAI,GAAI,IAAI,CAACzB,QAAQ,CAAC0B,SAAS,CAACL,OAAM,IAAKA,OAAO,CAACnB,EAAC,KAAMA,EAAE;;QAElE;QACA,IAAIuB,KAAI,KAAM,CAAC,CAAC,EAAE;UAChB,IAAI,CAACzB,QAAQ,CAAC2B,MAAM,CAACF,KAAK,EAAE,CAAC;QAC/B;;QAEA;MACF,CAAC,EACAR,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,2DAA2D,EAAEA,KAAK;MAClF,CAAC;IACL;EAEF,CAAC;EACDU,OAAMA,CAAA,EAAK;IACTlC,kBAAkB,CAACoB,MAAM,CAAC,EACvBC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAAChB,QAAO,GAAIgB,QAAQ,CAACjB,IAAG;IAC9B,CAAC;EACL;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}