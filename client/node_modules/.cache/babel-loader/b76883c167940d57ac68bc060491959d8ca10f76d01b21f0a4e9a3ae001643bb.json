{"ast":null,"code":"import ProductDataService from '@/services/ProductDataService';\nimport HeroComponent from '@/components/HeroComponent';\nimport FooterComponent from '@/components/FooterComponent';\nexport default {\n  name: 'App',\n  components: {\n    HeroComponent,\n    FooterComponent\n  },\n  data() {\n    return {\n      produits: [],\n      produitEnCoursDeModification: {\n        id: null,\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      afficherFormulaireAjout: false,\n      afficherFormulaireMiseAJour: false,\n      nouveauProduit: {\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      produitsLocaux: []\n    };\n  },\n  methods: {\n    actualiserListeProduits() {\n      // Utilisez votre méthode getAll pour récupérer la liste des produits\n      ProductDataService.getAll().then(response => {\n        // Mettez à jour la liste des produits avec les données reçues\n        this.produits = response.data;\n      }).catch(error => {\n        console.error('Erreur lors de la récupération de la liste des produits :', error);\n      });\n    },\n    mettreAJourProduit(id, produit) {\n      this.produitEnCoursDeModification = {\n        ...produit\n      };\n      this.afficherFormulaireMiseAJour = true;\n    },\n    async handleSauvegarderNouveauProduits() {\n      if (!this.nouveauProduit.name || !this.nouveauProduit.description || !this.nouveauProduit.prix || !this.nouveauProduit.categorie || !this.nouveauProduit.photo) {\n        console.error('Veuillez remplir tous les champs obligatoires.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('name', this.nouveauProduit.name);\n      formData.append('description', this.nouveauProduit.description);\n      formData.append('prix', this.nouveauProduit.prix);\n      formData.append('categorie', this.nouveauProduit.categorie);\n      formData.append('photo', this.nouveauProduit.photo);\n      try {\n        const response = await ProductDataService.create(formData);\n        if (response.status === 200) {\n          const data = response.data;\n          console.log('Produit ajouté avec succès sur le serveur:', data);\n          if (data.id) {\n            this.nouveauProduit.id = data.id;\n          }\n\n          // Mettez à jour la liste des produits côté client\n          await this.actualiserListeProduits();\n\n          // Forcer la mise à jour de l'interface utilisateur\n          this.$forceUpdate();\n          this.afficherFormulaireAjout = false;\n          this.nouveauProduit = {\n            name: '',\n            description: '',\n            prix: 0,\n            photo: null,\n            categorie: ''\n          };\n        } else {\n          console.error('Erreur lors de l\\'ajout du produit sur le serveur.');\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du produit sur le serveur :', error);\n      }\n    },\n    supprimerProduit(id) {\n      ProductDataService.delete(id).then(response => {\n        console.log('Produit supprimé avec succès sur le serveur:', response.data);\n\n        // Recherchez l'index de l'élément à supprimer dans le tableau\n        const index = this.produits.findIndex(produit => produit.id === id);\n\n        // Si l'élément a été trouvé, supprimez-le du tableau\n        if (index !== -1) {\n          this.produits.splice(index, 1);\n        }\n\n        // Vous n'avez pas besoin d'appeler actualiserListeProduits ici, car vous avez déjà mis à jour le DOM.\n      }).catch(error => {\n        console.error('Erreur lors de la suppression du produit sur le serveur :', error);\n      });\n    }\n  },\n  mounted() {\n    ProductDataService.getAll().then(response => {\n      this.produits = response.data;\n    });\n  }\n};","map":{"version":3,"names":["ProductDataService","HeroComponent","FooterComponent","name","components","data","produits","produitEnCoursDeModification","id","nom","description","prix","photo","categorie","afficherFormulaireAjout","afficherFormulaireMiseAJour","nouveauProduit","produitsLocaux","methods","actualiserListeProduits","getAll","then","response","catch","error","console","mettreAJourProduit","produit","handleSauvegarderNouveauProduits","formData","FormData","append","create","status","log","$forceUpdate","supprimerProduit","delete","index","findIndex","splice","mounted"],"sources":["C:\\Users\\user\\Downloads\\Reprise_2023\\elmaslohi-tp3\\client\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav>\n      <router-link to=\"/\">Home</router-link> |\n      <router-link to=\"/product\">Produits</router-link>\n    </nav>\n    <HeroComponent />\n    <div class=\"container mt-4\">\n      <router-view\n        :produits=\"produits\"\n        :actualiserListeProduits=\"actualiserListeProduits\"\n        :mettreAJourProduit=\"mettreAJourProduit\"\n        :supprimerProduit=\"supprimerProduit\"\n        :ajouterProduit=\"ajouterProduit\"\n        :handleSauvegarderNouveauProduits=\"handleSauvegarderNouveauProduit\"\n      ></router-view>\n    </div>\n  </div>\n   <FooterComponent />\n</template>\n\n<script>\nimport ProductDataService from '@/services/ProductDataService'\nimport HeroComponent from '@/components/HeroComponent'\nimport FooterComponent from '@/components/FooterComponent'\n\nexport default {\n  name: 'App',\n  components: {\n    HeroComponent,\n    FooterComponent\n  },\n  data () {\n    return {\n      produits: [],\n      produitEnCoursDeModification: {\n        id: null,\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      afficherFormulaireAjout: false,\n      afficherFormulaireMiseAJour: false,\n      nouveauProduit: {\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      produitsLocaux: []\n    }\n  },\n  methods: {\n    actualiserListeProduits () {\n      // Utilisez votre méthode getAll pour récupérer la liste des produits\n      ProductDataService.getAll()\n        .then(response => {\n          // Mettez à jour la liste des produits avec les données reçues\n          this.produits = response.data\n        })\n        .catch(error => {\n          console.error('Erreur lors de la récupération de la liste des produits :', error)\n        })\n    },\n    mettreAJourProduit (id, produit) {\n      this.produitEnCoursDeModification = { ...produit }\n      this.afficherFormulaireMiseAJour = true\n    },\n    async handleSauvegarderNouveauProduits () {\n      if (!this.nouveauProduit.name || !this.nouveauProduit.description || !this.nouveauProduit.prix || !this.nouveauProduit.categorie || !this.nouveauProduit.photo) {\n        console.error('Veuillez remplir tous les champs obligatoires.')\n        return\n      }\n\n      const formData = new FormData()\n      formData.append('name', this.nouveauProduit.name)\n      formData.append('description', this.nouveauProduit.description)\n      formData.append('prix', this.nouveauProduit.prix)\n      formData.append('categorie', this.nouveauProduit.categorie)\n      formData.append('photo', this.nouveauProduit.photo)\n      try {\n        const response = await ProductDataService.create(formData)\n\n        if (response.status === 200) {\n          const data = response.data\n          console.log('Produit ajouté avec succès sur le serveur:', data)\n\n          if (data.id) {\n            this.nouveauProduit.id = data.id\n          }\n\n          // Mettez à jour la liste des produits côté client\n          await this.actualiserListeProduits()\n\n          // Forcer la mise à jour de l'interface utilisateur\n          this.$forceUpdate()\n\n          this.afficherFormulaireAjout = false\n          this.nouveauProduit = {\n            name: '',\n            description: '',\n            prix: 0,\n            photo: null,\n            categorie: ''\n          }\n        } else {\n          console.error('Erreur lors de l\\'ajout du produit sur le serveur.')\n        }\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du produit sur le serveur :', error)\n      }\n    },\n    supprimerProduit (id) {\n      ProductDataService.delete(id)\n        .then((response) => {\n          console.log('Produit supprimé avec succès sur le serveur:', response.data)\n\n          // Recherchez l'index de l'élément à supprimer dans le tableau\n          const index = this.produits.findIndex(produit => produit.id === id)\n\n          // Si l'élément a été trouvé, supprimez-le du tableau\n          if (index !== -1) {\n            this.produits.splice(index, 1)\n          }\n\n          // Vous n'avez pas besoin d'appeler actualiserListeProduits ici, car vous avez déjà mis à jour le DOM.\n        })\n        .catch((error) => {\n          console.error('Erreur lors de la suppression du produit sur le serveur :', error)\n        })\n    }\n\n  },\n  mounted () {\n    ProductDataService.getAll()\n      .then(response => {\n        this.produits = response.data\n      })\n  }\n\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 50px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}