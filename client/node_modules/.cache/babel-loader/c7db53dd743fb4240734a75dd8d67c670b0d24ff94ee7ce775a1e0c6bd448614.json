{"ast":null,"code":"import ProductDataService from '@/services/ProductDataService';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      produits: [],\n      produitEnCoursDeModification: {\n        id: null,\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      afficherFormulaireAjout: false,\n      afficherFormulaireMiseAJour: false,\n      nouveauProduit: {\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      produitsLocaux: []\n    };\n  },\n  methods: {\n    actualiserListeProduits() {\n      fetch('http://localhost:8081/api/product').then(response => response.json()).then(data => {\n        this.produits = data;\n      }).catch(error => {\n        console.error('Erreur lors de la récupération de la liste des produits :', error);\n      });\n    },\n    mettreAJourProduit(id, produit) {\n      this.produitEnCoursDeModification = {\n        ...produit\n      };\n      this.afficherFormulaireMiseAJour = true;\n    },\n    created() {\n      ProductDataService.getAll().then(response => {\n        this.produitsLocaux = response.data;\n      }).catch(error => {\n        console.error('Erreur lors de la récupération des produits :', error);\n      });\n    },\n    supprimerProduit(id) {\n      ProductDataService.delete(id).then(response => {\n        console.log('Produit supprimé avec succès sur le serveur:', response.data);\n\n        // Recherchez l'index de l'élément à supprimer dans le tableau\n        const index = this.produits.findIndex(produit => produit.id === id);\n\n        // Si l'élément a été trouvé, supprimez-le du tableau\n        if (index !== -1) {\n          this.produits.splice(index, 1);\n        }\n\n        // Vous n'avez pas besoin d'appeler actualiserListeProduits ici, car vous avez déjà mis à jour le DOM.\n      }).catch(error => {\n        console.error('Erreur lors de la suppression du produit sur le serveur :', error);\n      });\n    },\n    ajouterProduit() {\n      const formData = new FormData();\n      formData.append('nom', this.nouveauProduit.nom);\n      formData.append('description', this.nouveauProduit.description);\n      formData.append('prix', this.nouveauProduit.prix);\n      formData.append('categorie', this.nouveauProduit.categorie);\n      formData.append('photo', this.nouveauProduit.photo);\n      fetch('http://localhost:8081/api/produits', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        console.log('Produit ajouté avec succès sur le serveur:', data);\n        this.actualiserListeProduits();\n        this.afficherFormulaireAjout = false;\n        this.nouveauProduit = {\n          nom: '',\n          description: '',\n          prix: 0,\n          photo: '',\n          categorie: ''\n        };\n      }).catch(error => {\n        console.error('Erreur lors de l\\'ajout du produit sur le serveur :', error);\n      });\n    }\n  },\n  mounted() {\n    ProductDataService.getAll().then(response => {\n      this.produits = response.data;\n    });\n  }\n};","map":{"version":3,"names":["ProductDataService","name","data","produits","produitEnCoursDeModification","id","nom","description","prix","photo","categorie","afficherFormulaireAjout","afficherFormulaireMiseAJour","nouveauProduit","produitsLocaux","methods","actualiserListeProduits","fetch","then","response","json","catch","error","console","mettreAJourProduit","produit","created","getAll","supprimerProduit","delete","log","index","findIndex","splice","ajouterProduit","formData","FormData","append","method","body","mounted"],"sources":["C:\\Users\\user\\Downloads\\Reprise_2023\\elmaslohi-tp3\\client\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <nav>\n      <router-link to=\"/\">Home</router-link> |\n      <router-link to=\"/about\">About</router-link> |\n      <router-link to=\"/product\">Produits</router-link>\n    </nav>\n    <div class=\"container mt-4\">\n      <router-view\n        :produits=\"produits\"\n        :actualiserListeProduits=\"actualiserListeProduits\"\n        :mettreAJourProduit=\"mettreAJourProduit\"\n        :supprimerProduit=\"supprimerProduit\"\n        :ajouterProduit=\"ajouterProduit\"\n      ></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ProductDataService from '@/services/ProductDataService'\n\nexport default {\n  name: 'App',\n  data () {\n    return {\n      produits: [],\n      produitEnCoursDeModification: {\n        id: null,\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      afficherFormulaireAjout: false,\n      afficherFormulaireMiseAJour: false,\n      nouveauProduit: {\n        nom: '',\n        description: '',\n        prix: 0,\n        photo: '',\n        categorie: ''\n      },\n      produitsLocaux: []\n    }\n  },\n  methods: {\n    actualiserListeProduits () {\n      fetch('http://localhost:8081/api/product')\n        .then(response => response.json())\n        .then(data => {\n          this.produits = data\n        })\n        .catch(error => {\n          console.error('Erreur lors de la récupération de la liste des produits :', error)\n        })\n    },\n    mettreAJourProduit (id, produit) {\n      this.produitEnCoursDeModification = { ...produit }\n      this.afficherFormulaireMiseAJour = true\n    },\n    created () {\n      ProductDataService.getAll()\n        .then(response => {\n          this.produitsLocaux = response.data\n        })\n        .catch(error => {\n          console.error('Erreur lors de la récupération des produits :', error)\n        })\n    },\n    supprimerProduit (id) {\n       ProductDataService.delete(id)\n    .then((response) => {\n      console.log('Produit supprimé avec succès sur le serveur:', response.data);\n\n      // Recherchez l'index de l'élément à supprimer dans le tableau\n      const index = this.produits.findIndex(produit => produit.id === id);\n\n      // Si l'élément a été trouvé, supprimez-le du tableau\n      if (index !== -1) {\n        this.produits.splice(index, 1);\n      }\n\n      // Vous n'avez pas besoin d'appeler actualiserListeProduits ici, car vous avez déjà mis à jour le DOM.\n    })\n        .catch((error) => {\n          console.error('Erreur lors de la suppression du produit sur le serveur :', error)\n        })\n    },\n    ajouterProduit () {\n      const formData = new FormData()\n      formData.append('nom', this.nouveauProduit.nom)\n      formData.append('description', this.nouveauProduit.description)\n      formData.append('prix', this.nouveauProduit.prix)\n      formData.append('categorie', this.nouveauProduit.categorie)\n      formData.append('photo', this.nouveauProduit.photo)\n\n      fetch('http://localhost:8081/api/produits', {\n        method: 'POST',\n        body: formData\n      })\n        .then(response => response.json())\n        .then(data => {\n          console.log('Produit ajouté avec succès sur le serveur:', data)\n          this.actualiserListeProduits()\n          this.afficherFormulaireAjout = false\n          this.nouveauProduit = {\n            nom: '',\n            description: '',\n            prix: 0,\n            photo: '',\n            categorie: ''\n          }\n        })\n        .catch(error => {\n          console.error('Erreur lors de l\\'ajout du produit sur le serveur :', error)\n        })\n    }\n  },\n  mounted () {\n    ProductDataService.getAll()\n      .then(response => {\n        this.produits = response.data\n      })\n  }\n\n}\n</script>\n\n<style>\n/* Votre CSS ici */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}